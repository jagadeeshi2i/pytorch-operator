apiVersion: "kubeflow.org/v1"
kind: "PyTorchJob"
metadata:
  name: "pytorch-job-bert"
spec:
  pytorchReplicaSpecs:
    Master:
      replicas: 1
      imagePullPolicy: Always
      restartPolicy: OnFailure
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"
        spec:
          containers:
            - name: pytorch
              image: <username>/pytorch_dist_bert:latest
              # For CPU "--accelerator", "ddp_cpu"
              args: ["--gpus", "1", "--accelerator", "ddp", "--num_nodes", "2"]
              ports:
              - containerPort: 24456
                name: pytorchjob-port
              resources:
                limits:
                    nvidia.com/gpu: 1 # requesting 1 GPU
              volumeMounts:
                - mountPath: /model
                  name: model-volume
          volumes:
            - name: model-volume
              persistentVolumeClaim:
                claimName: fileserver-claim
    Worker:
      replicas: 1
      imagePullPolicy: Always
      restartPolicy: OnFailure
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"
        spec:
          containers: 
            - name: pytorch
              image: <username>/pytorch_dist_bert:latest
              # For CPU "--accelerator", "ddp_cpu"
              args: ["--gpus", "1", "--accelerator", "ddp", "--num_nodes", "2"]
              ports:
              - containerPort: 24456
                name: pytorchjob-port
              resources:
                limits:
                    nvidia.com/gpu: 1 # requesting 1 GPU
              volumeMounts:
                - mountPath: /model
                  name: model-volume
          volumes:
            - name: model-volume
              persistentVolumeClaim:
                claimName: fileserver-claim
                